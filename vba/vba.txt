' ThisWorkbook モジュール
Option Explicit

Private Const ANALYZER_PATH As String = "html-analyzer.exe"
Private Const DEFAULT_INPUT_DIR As String = "C:\temp\html-input"
Private Const DEFAULT_OUTPUT_DIR As String = "C:\temp\html-output"

' フォームで使用するための変数
Public SelectedInputDir As String
Public SelectedOutputDir As String

Private Sub Workbook_Open()
    SelectedInputDir = DEFAULT_INPUT_DIR
    SelectedOutputDir = DEFAULT_OUTPUT_DIR
End Sub

' 標準モジュール (Module1)
Option Explicit

Public Sub ShowFolderSelector()
    Dim fd As FileDialog
    Set fd = Application.FileDialog(msoFileDialogFolderPicker)
    
    With fd
        .Title = "HTMLファイルのあるフォルダを選択してください"
        .ButtonName = "選択"
        
        If .Show = -1 Then
            ThisWorkbook.SelectedInputDir = .SelectedItems(1)
        End If
    End With
End Sub

Public Sub StartAnalysis()
    ' 解析の実行
    Dim cmd As String
    cmd = """" & ANALYZER_PATH & """ """ & ThisWorkbook.SelectedInputDir & """"
    
    ' シェルの実行
    Dim wsh As Object
    Set wsh = CreateObject("WScript.Shell")
    wsh.Run cmd, 1, True
    
    ' 解析結果の処理
    ProcessAnalysisResults
End Sub

Private Sub ProcessAnalysisResults()
    Dim fso As Object
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    ' 出力ディレクトリ内のJSONファイルを処理
    Dim file As Object
    Dim jsonText As String
    Dim jsonObj As Object
    
    For Each file In fso.GetFolder(ThisWorkbook.SelectedOutputDir).Files
        If LCase(fso.GetExtensionName(file.Name)) = "json" Then
            ' JSONファイルの読み込み
            jsonText = ReadTextFile(file.Path)
            Set jsonObj = ParseJson(jsonText)
            
            ' 新しいシートの作成
            CreateDesignSheet jsonObj
        End If
    Next file
End Sub

Private Function ReadTextFile(filePath As String) As String
    Dim fso As Object
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    Dim ts As Object
    Set ts = fso.OpenTextFile(filePath, 1) ' ForReading = 1
    
    ReadTextFile = ts.ReadAll
    ts.Close
End Function

Private Sub CreateDesignSheet(jsonObj As Object)
    ' テンプレートシートのコピー
    Dim templateSheet As Worksheet
    Set templateSheet = ThisWorkbook.Sheets("Template")
    templateSheet.Copy After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count)
    
    ' 新しいシートの取得
    Dim newSheet As Worksheet
    Set newSheet = ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count)
    
    ' メタ情報の出力
    newSheet.Range("B1").Value = jsonObj("meta")("画面タイトル")
    
    ' スタイルシートの出力
    Dim i As Long
    i = 30
    Dim key As Variant
    For Each key In jsonObj("sheets")("styleSheets")
        newSheet.Cells(i, 3).Value = jsonObj("sheets")("styleSheets")(key)
        i = i + 1
    Next key
    
    ' スクリプトの出力
    i = 36
    For Each key In jsonObj("sheets")("scripts")
        newSheet.Cells(i, 4).Value = jsonObj("sheets")("scripts")(key)
        i = i + 1
    Next key
    
    ' サウンド情報の出力
    With newSheet
        .Range("M30").Value = jsonObj("sounds")("ID名")
        .Range("M31").Value = jsonObj("sounds")("サウンド名")
        .Range("M32").Value = jsonObj("sounds")("繰り返し有無")
        .Range("M33").Value = jsonObj("sounds")("繰返間隔")
        .Range("M34").Value = jsonObj("sounds")("再生タイミング")
    End With
    
    ' 要素情報の出力
    i = 44
    Dim element As Object
    For Each element In jsonObj("elements")
        ' 深さに基づいてカラムを計算
        Dim depthCol As Long
        depthCol = 2 + CLng(element("深さ"))
        
        ' タグ情報
        newSheet.Cells(i, depthCol).Value = element("タグ")
        
        ' 属性情報
        Dim attrStr As String
        attrStr = ""
        Dim attr As Variant
        
        ' ID属性
        For Each attr In element("属性")("ID属性")
            attrStr = attrStr & attr & "=" & element("属性")("ID属性")(attr) & vbCrLf
        Next attr
        newSheet.Cells(i, 9).Value = attrStr
        
        ' その他属性
        attrStr = ""
        For Each attr In element("属性")("その他属性")
            attrStr = attrStr & attr & "=" & element("属性")("その他属性")(attr) & vbCrLf
        Next attr
        newSheet.Cells(i, 10).Value = attrStr
        
        ' クラス名
        newSheet.Cells(i, 11).Value = element("属性")("クラス名")
        
        ' スタイル情報
        Dim styleStr As String
        With element("スタイル")
            styleStr = "文字サイズ:" & .Item("文字サイズ") & ", " & _
                      "文字色:" & .Item("文字色") & ", " & _
                      "ディスプレイ:" & .Item("ディスプレイ") & ", " & _
                      "ポジション:" & .Item("ポジション")
        End With
        newSheet.Cells(i, 12).Value = styleStr
        
        i = i + 1
    Next element
End Sub